# =============================================================================
# SCIM Proxy Service - Конфигурация
# =============================================================================

# -----------------------------------------------------------------------------
# Upstream SCIM API - Настройки подключения к существующему SCIM API
# -----------------------------------------------------------------------------

# URL базового адреса upstream SCIM API (обязательный параметр)
# Пример: https://your-company.scim-api.com/v2
# Примечание: Должен включать протокол (http/https) и путь до SCIM API
UPSTREAM_BASE_URL=https://5859666.scim-api.passport.yandex.net/v2

# Таймаут для запросов к upstream API в секундах (по умолчанию: 30)
# Рекомендуется: 15-60 секунд в зависимости от скорости upstream API
UPSTREAM_TIMEOUT=30

# Максимальное количество одновременных соединений к upstream API (по умолчанию: 100)
# Увеличьте для высоконагруженных систем, уменьшите если upstream API имеет ограничения
UPSTREAM_MAX_CONNECTIONS=100

# -----------------------------------------------------------------------------
# Прокси настройки - Конфигурация SCIM Proxy сервера
# -----------------------------------------------------------------------------

# IP адрес для привязки сервера (по умолчанию: 0.0.0.0)
# 0.0.0.0 - слушать на всех интерфейсах, 127.0.0.1 - только локально
PROXY_HOST=0.0.0.0

# Порт для SCIM Proxy сервера (по умолчанию: 8000)
# При использовании с Nginx TLS прокси, этот порт используется внутренне
PROXY_PORT=8000

# Количество worker процессов (по умолчанию: 4)
# Рекомендуется: количество CPU ядер * 2
PROXY_WORKERS=4

# -----------------------------------------------------------------------------
# Кэширование - Настройки кэша для улучшения производительности
# -----------------------------------------------------------------------------

# Время жизни кэша в секундах (по умолчанию: 300 = 5 минут)
# 0 - отключить кэширование, 60-3600 - рекомендуемый диапазон
CACHE_TTL=300

# Максимальное количество элементов в кэше (по умолчанию: 1000)
# Увеличьте для систем с большим количеством уникальных запросов
CACHE_MAX_SIZE=1000

# Включить/выключить кэширование (по умолчанию: true)
# true - включить, false - отключить кэширование
ENABLE_CACHE=true

# -----------------------------------------------------------------------------
# Логирование - Настройки системы логирования
# -----------------------------------------------------------------------------

# Уровень логирования (по умолчанию: INFO)
# DEBUG - подробная отладочная информация
# INFO - общая информация о работе
# WARNING - предупреждения
# ERROR - только ошибки
LOG_LEVEL=INFO

# Формат логов (по умолчанию: json)
# json - структурированные JSON логи (рекомендуется для продакшена)
# text - человекочитаемый текстовый формат (удобно для разработки)
LOG_FORMAT=json

# -----------------------------------------------------------------------------
# Безопасность - Настройки безопасности и CORS
# -----------------------------------------------------------------------------

# Разрешенные хосты для подключения (по умолчанию: *)
# * - разрешить все хосты
# localhost,example.com - разрешить только указанные хосты
ALLOWED_HOSTS=*

# Разрешенные источники для CORS запросов (по умолчанию: *)
# * - разрешить все источники
# https://app.example.com,https://admin.example.com - разрешить только указанные
CORS_ORIGINS=*

# -----------------------------------------------------------------------------
# Производительность - Настройки производительности и ограничений
# -----------------------------------------------------------------------------

# Максимальная сложность SCIM фильтра (по умолчанию: 50)
# Количество операций в фильтре (eq, and, or, etc.)
# Защищает от слишком сложных фильтров, которые могут замедлить систему
MAX_FILTER_COMPLEXITY=50

# Максимальный размер ответа в байтах (по умолчанию: 10485760 = 10MB)
# Защищает от слишком больших ответов, которые могут перегрузить память
MAX_RESPONSE_SIZE=10485760

# Максимальное количество записей для загрузки при фильтрации (по умолчанию: 2000)
# При использовании фильтров система загружает больше данных для корректной работы
# Увеличьте если у вас много записей и нужна более точная фильтрация
# Уменьшите для экономии памяти и ускорения работы
MAX_FILTER_FETCH_SIZE=2000

# Множитель для определения количества загружаемых записей (по умолчанию: 20)
# При запросе N записей с фильтром, система загрузит N * FILTER_FETCH_MULTIPLIER записей
# Например: запрос 50 записей с фильтром загрузит 50 * 20 = 1000 записей для фильтрации
# Увеличьте если фильтры возвращают мало результатов
# Уменьшите для экономии ресурсов
FILTER_FETCH_MULTIPLIER=20

# -----------------------------------------------------------------------------
# Примеры конфигурации для разных сценариев
# -----------------------------------------------------------------------------

# Высокая производительность (много запросов):
# UPSTREAM_MAX_CONNECTIONS=200
# PROXY_WORKERS=8
# CACHE_TTL=600
# CACHE_MAX_SIZE=5000
# MAX_FILTER_FETCH_SIZE=5000

# Экономия ресурсов (ограниченная память):
# UPSTREAM_MAX_CONNECTIONS=50
# PROXY_WORKERS=2
# CACHE_TTL=60
# CACHE_MAX_SIZE=500
# MAX_FILTER_FETCH_SIZE=1000
# FILTER_FETCH_MULTIPLIER=10

# Отладка и разработка:
# LOG_LEVEL=DEBUG
# LOG_FORMAT=text
# ENABLE_CACHE=false
# MAX_FILTER_COMPLEXITY=100